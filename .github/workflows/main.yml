name: Continuous Integration
on: [push, pull_request]

jobs:
  functional_tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    name: functional tests
    runs-on: ${{ matrix.os }}
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: set node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: install dependencies
      run: npm ci

    - name: run jest tests
      run: npm test

  integration_tests_setup:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: "Integration Tests: Setup"
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: setup pyenv
      id: pyenv
      uses: ./

    - name: list python versions
      run: pyenv versions

    - name: verify default installation
      run: python --version

    - name: list files in pyenv_root
      run: ls -lhtr ${{ steps.pyenv.outputs.pyenv_root }}

  integration_tests_caches_default:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: "Integration Tests: Caches Default"
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: pyenv + python 3.7.16
      id: pyenv
      uses: ./
      with:
        default: 3.7.16

    - name: pyenv + python 3.7.16 cached
      id: pyenv2
      uses: ./
      with:
        default: 3.7.16

    - name: list python versions
      run: pyenv versions

    - name: verify default installation
      run: python --version | grep 3.7.16

  integration_tests_caches_versions:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: "Integration Tests: Caches Multiple Versions"
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: pyenv + python 3.8.16 and 3.7.16
      id: pyenv
      uses: ./
      with:
        default: 3.7.16
        command: |
          pip install -U pip
          pip install -U setuptools

        versions: 3.8.16,

    - name: display installed python versions
      run: pyenv versions

    - name: display installable python versions
      run: pyenv install --list

    - name: verify default installation
      run: python --version

    - name: verify python 3.8.16 installation
      run: pyenv local 3.8.16 && python --version | grep 3.8.16

    - name: verify python 3.7.16 installation
      run: pyenv local 3.7.16 && python --version | grep 3.7.16


  integration_test_run_commands_after_each_version_installation:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: "Integration Tests: Run commands after each version installation"
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: python 3.7.16 and 3.8.16 with latest pip
      id: pyenv
      uses: ./
      with:
        default: 3.7.16
        command: |
          pip install -U pip
          pip install -U setuptools

        versions: 3.8.16,

    - name: List python versions
      run: pyenv versions

    - name: verify default installation
      run: test "$(python --version | awk '{ print $NF }')" = "3.7.16"

    - name: verify 3.7.16 installation
      run: pyenv local 3.8.16 && test "$(python --version | awk '{ print $NF }')" = "3.8.16"

    - name: verify 3.8.16 installation
      run: pyenv local 3.8.16 && test "$(python --version | awk '{ print $NF }')" = "3.8.16"

    - name: verify pip version on python 3.7.16 installation
      run: pyenv local 3.7.16 && test "$(pip --version | awk '{ print $2 }')" = "23.2.1"

    - name: verify pip version on python 3.8.16 installation
      run: pyenv local 3.8.16 && test "$(pip --version | awk '{ print $2 }')" = "23.2.1"
